#+TITLE: Notes for personal emacs configuration
#+AUTHOR: Jack Kamm

* TODO Refactor emacs configs?

** Remove (general-create-definer) boilerplate

Keep the make-sparse-keepmap and binding to my-leader;
but get rid of the extra general-create-definer and use
bind-keys directly.

In general, prefer using bind-keys/define-key instead of general,
except for the things that general makes easier (binding a main leader key)

** Convert configs to packages?

Then, I could make my configs depend on each other.

In particular, for core functionality used throughout my configs,
could define ~(provide 'my-core)~ in my-core.el, and then call
~(require 'my-core)~ in other configs.

** Change naming convention?

Common prefixes are "config-", "init-", and "setup-"

See also:
https://github.com/caisah/emacs.dz

* Autoloads, org-mode, package-initialize
[2021-03-05]

Depending on my machine I may use any of 3 versions of org-mode, which
this config needs to be able to handle:

1. bundled version from emacs
2. org-mode from ELPA
3. development version from git

As long as the desired version is installed/prepended to the load-path
before org-mode is loaded, it should be selected at load time. See
also =list-load-path-shadows=

One confusing aspect is that =package-initialize= activates autoloads,
and I wasn't sure whether this will use the correct version.

The way autoloads work is by generating an autoloads file
(e.g. =elpa/org-plus-contrib-autoloads.el=), and then loading
that. Checking the autoloads file generated by package.el/MELPA, they
use the library name rather than the full path. Thus the first version
in =load-path= should still correctly shadow the others -- even if
autoloads were generated on the wrong version.

Note that things may go awry if a file is removed from the updated
version of the library, but is still present in an older version. Then
the file from the older version will be loaded if asked for. Other
files from the older version should still be correctly shadowed. There
may be problems if the older version is loaded and uses old function
signatures. But hopefully, any issues can be avoided by simply not
loading obsolete libraries or functions.

Aside: is this related to the problems I was having with ob-R
in spacemacs a few years ago?

See also:

- [[info:elisp#Packaging Basics][info:elisp#Packaging Basics]]

* Packages to check out & consider adding to config

** rg
[2021-10-07 Thu]

https://news.ycombinator.com/item?id=28785795

#+begin_quote
give ripgrep a try. it is probably better than anything else that you
might have tried.

if you are using emacs, then rg (emacs interface to ripgrep) is just
excellent. that when combined with embark and wgrep is almost magical
in what it can do.
#+end_quote
** cape.el: Completion at point extensions
[2022-03-13 Sun]

https://www.reddit.com/r/emacs/comments/td0nth/sample_usage_of_cape_completion_at_point/

** vundo: Visual undo tree
[2022-04-23 Sat]

https://github.com/casouri/vundo
https://www.reddit.com/r/emacs/comments/txwwfi/vundo_is_great_visual_undotree_for_emacs28/

** dtache.el
[2022-05-20 Fri]

https://git.sr.ht/~niklaseklund/dtache

It might have been renamed to dtached.el

** GNU Hyperbole
[2022-06-21 Tue]

Finally read an explanation of it that makes sense to me:
https://www.reddit.com/r/emacs/comments/vhc8l1/gnu_hyperbole_many_have_heard_of_it_but_what_does/

Also check out Embark?
https://www.reddit.com/r/emacs/comments/vied1y/gnu_hypobole_10/

#+begin_quote
 you truly want to use the hotkey functionality, you may rather use
 the original Hyperbole package, Embark (embark-dwim as hotkey and
 embark-act for additional actions)
#+end_quote

https://www.reddit.com/r/emacs/comments/nirwpk/comment/gz4906p/?utm_source=share&utm_medium=web2x&context=3


* TODO Better handling of emacs-jupyter RESULTS drawers
[2022-07-05 Tue]

emacs-jupyter likes to put results in drawers which are hidden.

The following snippet can fix this, at the cost of unhiding all drawers:

#+begin_src emacs-lisp
  (with-eval-after-load 'org
    (delete 'org-cycle-hide-drawers org-cycle-hook))
#+end_src

It would be nice to find a solution that only unhides the RESULTS
drawers, while hiding the others. Perhaps a defadvice?

[2022-07-10 Sun]

See the new option ~org-hide-drawer-startup~, and the note about it in
ORG-NEWS

* PEND Recentf tramp setting?
[2022-07-30 Sat]

I noticed the [[https://www.emacswiki.org/emacs/RecentFiles][emacswiki-recentf page]] recommends the following
configuration for recentf to prevent hanging tramp:

#+begin_src emacs-lisp
  ;; recommended to prevent hanging tramp:
  ;; https://www.emacswiki.org/emacs/RecentFiles
  (setq recentf-auto-cleanup 'never)
#+end_src

But I'm not sure if that advice is outdated.
